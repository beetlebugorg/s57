package s57

import (
	"os"
	"path/filepath"
)

// DefaultChartCacheDir returns the XDG-compliant default directory for caching
// downloaded NOAA charts.
//
// On Unix systems (Linux, macOS), this follows the XDG Base Directory specification:
//   - Uses $XDG_CACHE_HOME/canvas52/noaa-s57 if XDG_CACHE_HOME is set
//   - Falls back to $HOME/.cache/canvas52/noaa-s57 if not
//
// On other systems, uses OS-specific conventions.
//
// The directory is NOT created by this function - the caller must create it
// before use.
//
// Example:
//
//	cacheDir, err := s57.DefaultChartCacheDir()
//	if err != nil {
//	    log.Fatal(err)
//	}
//	// Create directory if needed
//	if err := os.MkdirAll(cacheDir, 0755); err != nil {
//	    log.Fatal(err)
//	}
//	// Use for chart downloads
//	loader, err := s57.NewChartLoaderFromCatalog(catalog, cacheDir, parser, opts)
func DefaultChartCacheDir() (string, error) {
	// Try XDG_CACHE_HOME first (Linux/Unix standard)
	if xdgCache := os.Getenv("XDG_CACHE_HOME"); xdgCache != "" {
		return filepath.Join(xdgCache, "canvas52", "noaa-s57"), nil
	}

	// Fall back to HOME/.cache (macOS/Linux)
	home, err := os.UserHomeDir()
	if err != nil {
		return "", err
	}

	return filepath.Join(home, ".cache", "canvas52", "noaa-s57"), nil
}

// DefaultCatalogPath returns the XDG-compliant default path for the NOAA catalog XML.
//
// On Unix systems (Linux, macOS), this follows the XDG Base Directory specification:
//   - Uses $XDG_CACHE_HOME/canvas52/ENCProdCat_19115.xml if XDG_CACHE_HOME is set
//   - Falls back to $HOME/.cache/canvas52/ENCProdCat_19115.xml if not
//
// The catalog is placed in the cache directory because it's automatically
// regenerated by NOAA and should be re-downloaded periodically.
//
// Example:
//
//	catalogPath, err := s57.DefaultCatalogPath()
//	if err != nil {
//	    log.Fatal(err)
//	}
//	// Download or load catalog
//	catalog, err := s57.LoadCatalog(catalogPath)
//	if os.IsNotExist(err) {
//	    // Catalog doesn't exist - download it
//	    catalog, err = s57.DownloadCatalog(catalogPath)
//	}
func DefaultCatalogPath() (string, error) {
	// Try XDG_CACHE_HOME first
	if xdgCache := os.Getenv("XDG_CACHE_HOME"); xdgCache != "" {
		return filepath.Join(xdgCache, "canvas52", "ENCProdCat_19115.xml"), nil
	}

	// Fall back to HOME/.cache
	home, err := os.UserHomeDir()
	if err != nil {
		return "", err
	}

	return filepath.Join(home, ".cache", "canvas52", "ENCProdCat_19115.xml"), nil
}

